{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/appReducer.js","store/reducers/adminReducer.js","store/reducers/userReducer.js","store/reducers/rootReducer.js","redux.js","hoc/authentication.js","utils/constant.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js","components/CustomScrollbars.js","components/CustomToast.js","routes/Home.js","store/actions/userActions.js","axios.js","services/userService.js","components/Loader.js","containers/Auth/ModalRegister.js","services/adminService.js","containers/Auth/ModalForgotPassword.js","containers/Auth/Login.js","store/actions/adminActions.js","components/Navigator.js","containers/Header/menuApp.js","containers/Header/menuAdmin.js","containers/Header/Header.js","store/actions/appActions.js","containers/System/ModalUser.js","containers/System/ModalEditUser.js","containers/System/UserManage.js","containers/System/UserHistory.js","containers/System/UserKeyboardLog.js","containers/System/UserBlockWebsite.js","containers/System/AdminManage.js","routes/System.js","components/ConfirmModal.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js"],"names":["actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","CHANGE_LANGUAGE","ADMIN_LOGIN_SUCCESS","ADMIN_LOGIN_FAIL","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","PROCESS_LOGOUT","initialState","started","language","systemMenuPath","contentOfConfirmModal","isOpen","messageId","handleFunc","dataFunc","appReducer","state","action","type","isLoggedIn","adminInfo","userInfo","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","adminPersistConfig","key","whitelist","userPersistConfig","appPersistConfig","history","createBrowserHistory","basename","process","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","admin","persistReducer","adminReducer","user","userReducer","app","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","dispatch","persistStore","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","path","Languages","KeyCodeUtils","e","UP","DOWN","TAB","ENTER","E","ESCAPE","flattenMessages","nestedMessages","prefix","keys","reduce","messages","value","prefixedKey","assign","messages_vi","messages_en","LanguageUtils","lang","CustomScrollbars","ref","React","createRef","getScrollLeft","current","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","props","scrollbars","originalTop","iteration","scroll","scrollTop","setTimeout","renderTrackHorizontal","className","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","this","disableVerticalScroll","disableHorizontalScroll","children","otherProps","autoHide","autoHideTimeout","hideTracksWhenNotNeeded","Component","CustomToastCloseButton","onClick","closeToast","Home","linkToRedirect","to","connect","processLogout","instance","axios","create","baseURL","withCredentials","interceptors","response","use","data","getAccessToken","userInfoJson","JSON","parse","localStorage","getItem","access_token","handleUserInfo","get","headers","handleCreateNewUserService","val","post","handleBlockUserService","childID","handleEditUserService","handleGetWebHistory","deviceID","day","handleGetKeyboardLog","handleTopWebHistory","Loader","ModalRegister","toggle","toggleUserManage","handleOnChangeInput","event","id","copyState","target","setState","checkValidateInput","isValid","arrInput","i","length","alert","handleCreateNewUser","createNewUser","fullName","password","email","Modal","size","ModalHeader","ModalBody","onChange","ModalFooter","Button","color","handleParentInfo","handleEditParentService","handleBlockParentService","parentID","ModalForgotPassword","toggleUserModalForgotPassword","handleForgotPassword","forgotPassword","console","log","Login","handleOnChangeUsernameInput","username","handleOnChangePasswordInput","handleLogin","a","errMessage","isLoading","userLoginSuccess","message","handleShowHidePassword","isShowPassword","toggleUserModal","isOpenModalRegister","isOpenModalForgotPassword","msg","LoginAgain","status","userForgotPassword","placeholder","style","navigate","push","adminLoginSuccess","actions","adminLoginFail","MenuGroup","name","Menu","active","link","hasSubMenu","onLinkClick","data-toggle","aria-expanded","SubMenu","getItemClass","location","pathname","MenuGroupWithRouter","withRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","menus","outerLoop","group","j","menu","prevProps","prevState","map","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ComponentWithRef","withRef","userMenu","adminMenu","Header","changeLanguage","changeLanguageAppRedux","role_id","full_name","languageInput","ModalUser","ModelEditUser","toggleEditUserManage","handleEditUser","editUserInfo","userEditData","lodash","isEmpty","disabled","UserManage","getAllUser","resp","arrUsers","isToast","toastMsg","handleAddNewUser","isOpenModal","handleBlockUser","isOpenModalEditUser","userEdit","toggleEditUserModal","editUser","arrayUsers","ModalEditUser","item","index","deviceNamesString","devices","device","deviceName","join","UserHistory","userAndDevices","getHistoryByDay","selectChild","selectDevice","selectDay","Number","arrHistories","getTopHistoryWeb","handleChoseChild","deviceToMapping","handleChoseDevice","handleChoseDay","arrayHistories","arrUserAndDevices","arrDeviceToMapping","hidden","class","url","total_visit","created_at","UserKeyboardLog","getKeyboardLogByDay","arrKeyboardLogs","arrayKeyboardLogs","key_stroke","UserBlockWebsite","AdminManage","System","component","ConfirmModal","handlerKeyDown","which","keyCode","acceptBtnRef","click","onAcceptBtnClick","onClose","setContentOfConfirmModal","document","addEventListener","removeEventListener","centered","App","handlePersistorState","getState","bootstrapped","onBeforeLift","Promise","resolve","then","catch","exact","toastClassName","bodyClassName","autoClose","hideProgressBar","pauseOnHover","pauseOnFocusLoss","closeOnClick","draggable","closeButton","Boolean","window","hostname","match","getFlattenedMessages","IntlProviderWrapper","locale","defaultLocale","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9125e029.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\r\n    //app\r\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\r\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\r\n    CHANGE_LANGUAGE: 'CHANGE_LANGUAGE',\r\n\r\n    //admin\r\n    ADMIN_LOGIN_SUCCESS: 'ADMIN_LOGIN_SUCCESS',\r\n    ADMIN_LOGIN_FAIL: 'ADMIN_LOGIN_FAIL',\r\n    // PROCESS_LOGOUT: 'PROCESS_LOGOUT',\r\n\r\n    //user\r\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\r\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    USER_LOGIN_FAIL: 'USER_LOGIN_FAIL',\r\n    PROCESS_LOGOUT: 'PROCESS_LOGOUT',\r\n})\r\n\r\nexport default actionTypes;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initContentOfConfirmModal = {\r\n    isOpen: false,\r\n    messageId: \"\",\r\n    handleFunc: null,\r\n    dataFunc: null\r\n}\r\n\r\nconst initialState = {\r\n    started: true,\r\n    language: 'vi',\r\n    systemMenuPath: '/system/user-manage',\r\n    contentOfConfirmModal: {\r\n        ...initContentOfConfirmModal\r\n    }\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.APP_START_UP_COMPLETE: \r\n            return {\r\n                ...state,\r\n                started: true\r\n            }\r\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL: \r\n            return {\r\n                ...state,\r\n                contentOfConfirmModal: {\r\n                    ...state.contentOfConfirmModal,\r\n                    ...action.contentOfConfirmModal\r\n                }\r\n            }\r\n        case actionTypes.CHANGE_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                language: action.language\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    adminInfo: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADMIN_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                adminInfo: action.adminInfo\r\n            }\r\n        case actionTypes.ADMIN_LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                adminInfo: null\r\n            }\r\n        case actionTypes.PROCESS_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                adminInfo: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userInfo: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                userInfo: action.userInfo\r\n            }\r\n        case actionTypes.USER_LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        case actionTypes.PROCESS_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {combineReducers} from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst adminPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'admin',\r\n    whitelist: ['isLoggedIn', 'adminInfo']\r\n};\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\n\r\nconst appPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'app',\r\n    whitelist: ['language']\r\n}\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    admin: persistReducer(adminPersistConfig, adminReducer),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig, appReducer)\r\n})","import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport createRootReducer from './store/reducers/rootReducer';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst reduxStateSyncConfig = {\r\n    whitelist: [\r\n        actionTypes.APP_START_UP_COMPLETE,\r\n    ]\r\n}\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n    routerMiddleware(history),\r\n    thunkMiddleware,\r\n    createStateSyncMiddleware(reduxStateSyncConfig),\r\n]\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst reduxStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n    authenticatedSelector: state => state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsAuthenticated',\r\n    redirectPath: '/login'\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n    // Want to redirect the user when they are authenticated\r\n    authenticatedSelector: state => !state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    allowRedirectBack: false\r\n});","export const path = {\r\n    HOME: '/home',\r\n    LOGIN: '/login',\r\n    LOG_OUT: '/logout',\r\n    SYSTEM: '/system'\r\n};\r\n\r\nexport const Languages = {\r\n    VI: 'vi',\r\n    EN: 'en'\r\n};\r\n \r\nexport const manageActions = {\r\n    ADD: \"ADD\",\r\n    EDIT: \"EDIT\",\r\n    DELETE: \"DELETE\"\r\n};\r\n\r\nexport const dateFormat = {\r\n    SEND_TO_SERVER: 'DD/MM/YYYY'\r\n};\r\n\r\nexport const YesNoObj = {\r\n    YES: 'Y',\r\n    NO: 'N'\r\n}","class KeyCodeUtils {\r\n\r\n    static UP = 38;\r\n\r\n    static DOWN = 40;\r\n\r\n    static TAB = 9;\r\n\r\n    static ENTER = 13;\r\n\r\n    static E = 69;\r\n\r\n    static ESCAPE = 27; \r\n\r\n    static isNavigation(e) {\r\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\r\n    }\r\n\r\n    static isNumeric(e) {\r\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\r\n    }\r\n    static isAlphabetic(e) {\r\n        return (e >= 65 && e <= 90);\r\n    }\r\n    static isDecimal(e) {\r\n        return e === 190 || e === 188 || e === 108 || e === 110;\r\n    }\r\n\r\n    static isDash(e) {\r\n        return e === 109 || e === 189;\r\n    }\r\n}\r\n\r\nexport default KeyCodeUtils;","import messages_vi from '../translations/vi.json';\r\nimport messages_en from '../translations/en.json';\r\n\r\nconst flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages == null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value = nestedMessages[key];\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, {[prefixedKey]: value})\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\nconst messages = {\r\n    'vi': flattenMessages(messages_vi),\r\n    'en': flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n    static getMessageByKey(key, lang) {\r\n        return messages[lang][key]\r\n    }\r\n\r\n    static getFlattenedMessages() {\r\n        return messages;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport './CustomScrollbars.scss';\r\n\r\nclass CustomScrollbars extends Component {\r\n\r\n    ref = React.createRef();\r\n\r\n    getScrollLeft =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollLeft();\r\n    }\r\n    getScrollTop =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollTop();\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const targetScrollTop = scrollbars.getScrollHeight();\r\n        this.scrollTo(targetScrollTop);\r\n    };\r\n\r\n    scrollTo = (targetTop) => {\r\n        const { quickScroll } = this.props;\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const originalTop = scrollbars.getScrollTop();\r\n        let iteration = 0;\r\n\r\n        const scroll = () => {\r\n            iteration++;\r\n            if (iteration > 30) {\r\n                return;\r\n            }\r\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\r\n\r\n            if (quickScroll && quickScroll === true) {\r\n                scroll();\r\n            } else {\r\n                setTimeout(() => {\r\n                    scroll();\r\n                }, 20);\r\n            }\r\n        };\r\n\r\n        scroll();\r\n    };\r\n\r\n    renderTrackHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderTrackVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderThumbHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderThumbVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderNone = (props) => {\r\n        return (\r\n            <div />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\r\n        return (\r\n            <Scrollbars\r\n                ref={this.ref}\r\n                autoHide={true}\r\n                autoHideTimeout={200}\r\n                hideTracksWhenNotNeeded={true}\r\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\r\n                {...otherProps}\r\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\r\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\r\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\r\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\r\n            >\r\n                {children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomScrollbars;","import React, { Component, Fragment } from 'react';\r\nimport { FormattedMessage, FormattedTime } from 'react-intl';\r\n\r\nimport CustomScrollBar from '../components/CustomScrollbars';\r\n\r\nimport './CustomToast.scss';\r\n\r\nclass CustomToast extends Component {\r\n\r\n    render() {\r\n        const { titleId, message, messageId, time } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"custom-toast\">\r\n                    <div className=\"toast-title\">\r\n                        {time && (\r\n                            <span className=\"date\">\r\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\r\n                            </span>\r\n                        )}\r\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\r\n                        <FormattedMessage id={titleId} />\r\n                    </div>\r\n                    {\r\n                        (message && typeof message === 'object') ?\r\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\r\n                                {\r\n                                    message.map((msg, index) => {\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <div className=\"toast-content\">{msg}</div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </CustomScrollBar> :\r\n                            <div className=\"toast-content\">\r\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport class CustomToastCloseButton extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\r\n                <i className=\"fa fa-fw fa-times-circle\" />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomToast;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        let linkToRedirect = isLoggedIn ? '/system/user-manage' : '/login';\r\n\r\n        return (\r\n            <Redirect to={linkToRedirect} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import actionTypes from './actionTypes';\r\n\r\nexport const addUserSuccess = () => ({\r\n    type: actionTypes.ADD_USER_SUCCESS\r\n})\r\n\r\nexport const userLoginSuccess = (userInfo) => ({\r\n    type: actionTypes.USER_LOGIN_SUCCESS,\r\n    userInfo: userInfo\r\n})\r\n\r\nexport const userLoginFail = () => ({\r\n    type: actionTypes.USER_LOGIN_FAIL\r\n})\r\n\r\nexport const processLogout = () => ({\r\n    type: actionTypes.PROCESS_LOGOUT\r\n})","import axios from 'axios';\r\nimport _ from 'lodash';\r\nimport config from './config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    withCredentials: true\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport default instance;\r\n","import axios from \"../axios\"\r\n\r\nconst getAccessToken = () => {\r\n    let localStoreObj = JSON.parse(localStorage.getItem('persist:user'))\r\n    let userInfoJson = localStoreObj.userInfo\r\n    let access_token = JSON.parse(userInfoJson).access_token\r\n    return access_token\r\n}\r\n\r\nconst handleLogin = (email, password) => {\r\n    return axios.post('/v1/logins',{\"email\":email,\"password\":password})\r\n}\r\n\r\nconst handleUserInfo = () => {\r\n    let access_token = getAccessToken()\r\n    return axios.get('v1/parents/child-info', \r\n        { headers: {'Content-Type': 'application/json', \"Authorization\" : `Bearer ${access_token}` }}\r\n    )\r\n}\r\n\r\nconst handleCreateNewUserService = (val) => {\r\n    let access_token = getAccessToken()\r\n    return axios.post('v1/parents/register-child',\r\n        {'email': val['email'], 'fullname': val['fullName'], 'password': val['password']},\r\n        { \r\n            headers: {\r\n                'Authorization' : `Bearer ${access_token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst handleBlockUserService = (childID) => {\r\n    let access_token = getAccessToken()\r\n    return axios.post(`v1/parents/block/${childID}`,\r\n        {},\r\n        { \r\n            headers: {\r\n                'Authorization' : `Bearer ${access_token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst handleEditUserService = (data) => {\r\n    let access_token = getAccessToken()\r\n    return axios.post(`v1/parents/edit-child/${data['id']}`,\r\n    {\"fullName\": data['fullName'], \"password\": data['password']},\r\n    { \r\n        headers: {\r\n            'Authorization' : `Bearer ${access_token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n}\r\n\r\nconst handleGetWebHistory = (childID, deviceID, day) => {\r\n    let access_token = getAccessToken()\r\n    return axios.get(`v1/parents/web-history/${childID}/${deviceID}/${day}`,\r\n        { headers: {'Content-Type': 'application/json', \"Authorization\" : `Bearer ${access_token}` }}\r\n    )\r\n}\r\n\r\nconst handleGetKeyboardLog = (childID, deviceID, day) => {\r\n    let access_token = getAccessToken()\r\n    return axios.get(`v1/parents/keyboard-log/${childID}/${deviceID}/${day}`,\r\n        { headers: {'Content-Type': 'application/json', \"Authorization\" : `Bearer ${access_token}` }}\r\n    )\r\n}\r\n\r\nconst handleTopWebHistory = (childID) => {\r\n    let access_token = getAccessToken()\r\n    return axios.get(`v1/parents/top-visit-web/${childID}`,\r\n        { headers: {'Content-Type': 'application/json', \"Authorization\" : `Bearer ${access_token}` }}\r\n    )\r\n}\r\n\r\nexport { \r\n    handleLogin, \r\n    handleUserInfo, \r\n    handleCreateNewUserService, \r\n    handleBlockUserService,\r\n    handleEditUserService,\r\n    handleGetWebHistory,\r\n    handleGetKeyboardLog,\r\n    handleTopWebHistory\r\n}","import React from \"react\";\r\nimport './Loader.css'\r\n\r\nfunction Loader(){\r\n    return <div className=\"spinner-overlay\">\r\n        <div className=\"spinner\"></div>\r\n    </div>\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass ModalRegister extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            fullName: '',\r\n            password: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggleUserManage()\r\n    }\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = {...this.state};\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['fullName', 'password', 'email']\r\n        for(let i=0; i < arrInput.length; i++){\r\n            if (!this.state[arrInput[i]]) {\r\n                alert(\"Please fill \" + arrInput[i] + '!!');\r\n                isValid = false;\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    handleCreateNewUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid) {\r\n            this.props.createNewUser(this.state);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Modal \r\n                    isOpen={this.props.isOpen} \r\n                    toggle={() => this.toggle()} \r\n                    className={'modal-user-container'}\r\n                    size='lg'\r\n                >\r\n                <ModalHeader toggle={() => this.toggle()}>\r\n                    <FormattedMessage id=\"login.register-form-title\"/>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <div className='modal-user-body'>\r\n                        <div className='input-container'>\r\n                            <label><FormattedMessage id=\"user-manage.form-create.full-name\"/></label>\r\n                            <input \r\n                                type='text' \r\n                                onChange={((event) => {this.handleOnChangeInput(event, \"fullName\")})}\r\n                                value={this.state.fullName}\r\n                            />\r\n                        </div>\r\n                        <div className='input-container'>\r\n                            <label><FormattedMessage id=\"user-manage.form-create.password\"/></label>\r\n                            <input \r\n                                type='password' \r\n                                onChange={((event) => {this.handleOnChangeInput(event, \"password\")})}\r\n                                value={this.state.password}\r\n                            />\r\n                        </div>\r\n                        <div className='input-container max-width-input'>\r\n                            <label><FormattedMessage id=\"user-manage.form-create.email\"/></label>\r\n                            <input \r\n                                type='text' \r\n                                onChange={((event) => {this.handleOnChangeInput(event, \"email\")})}\r\n                                value={this.state.email}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <Button \r\n                    color=\"primary px-3\" \r\n                    onClick={() => this.handleCreateNewUser()}\r\n                >\r\n                    <FormattedMessage id=\"user-manage.form-create.btn-add\"/>\r\n                </Button>{' '}\r\n                <Button color=\"secondary px-3\" onClick={() => this.toggle()}>\r\n                <FormattedMessage id=\"user-manage.form-create.btn-close\"/>\r\n                </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalRegister);\r\n","import axios from '../axios';\r\n\r\nconst getAccessToken = () => {\r\n    let localStoreObj = JSON.parse(localStorage.getItem('persist:user'))\r\n    let userInfoJson = localStoreObj.userInfo\r\n    let access_token = JSON.parse(userInfoJson).access_token\r\n    return access_token\r\n}\r\n\r\nconst handleParentInfo = () => {\r\n    let access_token = getAccessToken()\r\n    return axios.get('v1/admins', \r\n        { headers: {'Content-Type': 'application/json', \"Authorization\" : `Bearer ${access_token}` }}\r\n    )\r\n}\r\n\r\nconst handleEditParentService = (data) => {\r\n    let access_token = getAccessToken()\r\n    return axios.post(`v1/admins/change-info/${data['id']}`,\r\n    {\"fullName\": data['fullName'], \"password\": data['password']},\r\n    { \r\n        headers: {\r\n            'Authorization' : `Bearer ${access_token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n}\r\n\r\nconst handleBlockParentService = (parentID) => {\r\n    let access_token = getAccessToken()\r\n    return axios.post(`v1/admins/block/${parentID}`,\r\n        {},\r\n        { \r\n            headers: {\r\n                'Authorization' : `Bearer ${access_token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst handleRegisterNewAccountService = (val) => {\r\n    return axios.post('v1/parents/register',\r\n        {'email': val['email'], 'fullname': val['fullName'], 'password': val['password']}\r\n    )\r\n}\r\n\r\nconst handleForgotPasswordService = (val) => {\r\n    return axios.post(`v1/resetPassword?email=${val['email']}`)\r\n}\r\n\r\nexport {handleParentInfo, \r\n    handleEditParentService, \r\n    handleBlockParentService, \r\n    handleRegisterNewAccountService, \r\n    handleForgotPasswordService}","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass ModalForgotPassword extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggleUserModalForgotPassword()\r\n    }\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = {...this.state};\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email']\r\n        for(let i=0; i < arrInput.length; i++){\r\n            if (!this.state[arrInput[i]]) {\r\n                alert(\"Please fill \" + arrInput[i] + '!!');\r\n                isValid = false;\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    handleForgotPassword = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid) {\r\n            this.props.forgotPassword(this.state); \r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(\"here\")\r\n        return (\r\n                <Modal \r\n                    isOpen={this.props.isOpen} \r\n                    toggle={() => this.toggle()} \r\n                    className={'modal-user-container'}\r\n                    size='lg'\r\n                >\r\n                <ModalHeader toggle={() => this.toggle()}>\r\n                    <FormattedMessage id=\"login.form-forgot-password-title\"/>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <div className='modal-user-body'>\r\n                        <div className='input-container max-width-input'>\r\n                            <label><FormattedMessage id=\"login.form-forgot-password-email\"/>:</label>\r\n                            <input \r\n                                type='text' \r\n                                onChange={((event) => {this.handleOnChangeInput(event, \"email\")})}\r\n                                value={this.state.email}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <Button \r\n                    color=\"primary px-3\" \r\n                    onClick={() => this.handleForgotPassword()}\r\n                >\r\n                    <FormattedMessage id=\"login.form-forgot-password-btn-submit\"/>\r\n                </Button>{' '}\r\n                <Button color=\"secondary px-3\" onClick={() => this.toggle()}>\r\n                <FormattedMessage id=\"user-manage.form-create.btn-close\"/>\r\n                </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForgotPassword);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { handleLogin } from '../../services/userService';\r\nimport Loader from '../../components/Loader'\r\nimport ModalRegister from './ModalRegister';\r\nimport {handleRegisterNewAccountService, handleForgotPasswordService} from '../../services/adminService'\r\nimport ModalForgotPassword from './ModalForgotPassword';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            isShowPassword: false,\r\n            errMessage: \"\",\r\n            isLoading: false,\r\n            isOpenModalRegister: false,\r\n            isOpenModalForgotPassword: false,\r\n        }\r\n    }\r\n\r\n    handleOnChangeUsernameInput = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handleOnChangePasswordInput = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handleLogin = async() => {\r\n        this.setState({\r\n            errMessage: \"\"\r\n        })\r\n        if (this.state.username == \"\"){\r\n            this.setState({\r\n                errMessage: \"Please input username!!\"\r\n            })\r\n        }else if (this.state.password == \"\"){\r\n            this.setState({\r\n                errMessage: \"Please input password!!\"\r\n            })\r\n        } else{\r\n            try {\r\n                this.setState({isLoading: true})\r\n                let data = await handleLogin(this.state.username, this.state.password);\r\n                if (data != \"\") {\r\n                    this.setState({isLoading: false})\r\n                    this.props.userLoginSuccess(data)\r\n                }\r\n            } catch(error){\r\n                this.setState({isLoading: false})\r\n                if (error.response) {\r\n                    if (error.response.data) {\r\n                        this.setState({\r\n                            errMessage: error?.response?.data?.message\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleShowHidePassword = () => {\r\n        this.setState({\r\n            isShowPassword: !this.state.isShowPassword\r\n        })\r\n    }\r\n\r\n    toggleUserModal = () => {\r\n        this.setState({\r\n            isOpenModalRegister: !this.state.isOpenModalRegister\r\n        })\r\n    }\r\n\r\n    createNewUser = async (data) => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            let resp = await handleRegisterNewAccountService(data);\r\n            if (resp) {\r\n                this.setState({\r\n                    isOpenModalForgotPassword: false,\r\n                    isLoading: false\r\n                })\r\n                alert(\"Đăng kí thành công, vui lòng đăng nhập để tiếp tục!!\")\r\n            }\r\n        } catch(error) {\r\n            this.setState({isLoading: false})\r\n            if (error?.response?.data?.msg === 'Token has expired'){\r\n                alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                this.props.LoginAgain()\r\n            }\r\n            else if (error?.response?.status != 200) {\r\n                alert(\"Error: \" + error?.response?.data?.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleUserModalForgotPassword = () => {\r\n        this.setState({\r\n            isOpenModalForgotPassword: !this.state.isOpenModalForgotPassword\r\n        })\r\n    }\r\n\r\n    userForgotPassword = async (data) => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            let resp = await handleForgotPasswordService(data);\r\n            if (resp) {\r\n                this.setState({\r\n                    isOpenModalForgotPassword: false,\r\n                    isLoading: false\r\n                })\r\n                alert(\"Hệ thống đã gửi cho bạn mail thông báo thay đổi mật khẩu. Hãy vào mail để kiểm tra!\")\r\n            }\r\n        } catch(error) {\r\n            this.setState({isLoading: false})\r\n            if (error?.response?.data?.msg === 'Token has expired'){\r\n                alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                this.props.LoginAgain()\r\n            }\r\n            else if (error?.response?.status != 200) {\r\n                alert(\"Error: \" + error?.response?.data?.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(\"c:\", this.state.isOpenModalForgotPassword)\r\n        return (\r\n            <div className='login-background'>\r\n                {this.state.isLoading && <Loader></Loader>}\r\n                {this.state.isOpenModalRegister && \r\n                    <ModalRegister\r\n                        isOpen={this.state.isOpenModalRegister}\r\n                        toggleUserManage={this.toggleUserModal}\r\n                        createNewUser = {this.createNewUser}\r\n                    />\r\n                }\r\n                {this.state.isOpenModalForgotPassword &&\r\n                    <ModalForgotPassword\r\n                        isOpen={this.state.isOpenModalForgotPassword}\r\n                        toggleUserModalForgotPassword={this.toggleUserModalForgotPassword}\r\n                        forgotPassword = {this.userForgotPassword}\r\n                    />\r\n                }\r\n                <div className='login-container'>\r\n                    <div className='login-content row'>\r\n                        <div className='col-12 login-text'><FormattedMessage id='login.login'/></div>\r\n                        <div className='col-12 form-group login-input'>\r\n                            <label className='login-label-text'><FormattedMessage id='login.username'/>:</label>\r\n                            <input type='text' className='form-control' placeholder='Nhập tài khoản của bạn' onChange={(event) => this.handleOnChangeUsernameInput(event)}/>\r\n                        </div>\r\n                        <div className='col-12 form-group login-input'>\r\n                            <label className='login-label-text'><FormattedMessage id='login.password'/>:</label>\r\n                            <div className='custom-input-password'>\r\n                                <input type={this.state.isShowPassword? 'text': 'password'} className='form-control' placeholder='Nhập mật khẩu của bạn' onChange={(event) => this.handleOnChangePasswordInput(event)}/>\r\n                                <span onClick={() => this.handleShowHidePassword()}>\r\n                                    <i className={this.state.isShowPassword? 'far fa-eye': 'far fa-eye-slash'}></i>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12' style={{color:'red'}}>{this.state.errMessage}</div>\r\n                        <div className='col-12'>\r\n                            <button className='btn-login' onClick={() => {this.handleLogin()}}>\r\n                                <FormattedMessage id='login.login'/>\r\n                            </button>\r\n                        </div>\r\n                        <div className='col-12 div-support'>\r\n                            <span className='span-support' onClick={() => (this.toggleUserModalForgotPassword())}><FormattedMessage id='login.forgot-password'/>?</span>\r\n                            <span className='span-support' onClick={() => {this.toggleUserModal()}}><FormattedMessage id='login.register'/>!</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        adminLoginSuccess: (adminInfo) => dispatch(actions.adminLoginSuccess(adminInfo)),\r\n        adminLoginFail: () => dispatch(actions.adminLoginFail()),\r\n        userLoginSuccess: (userInfo) => dispatch(actions.userLoginSuccess(userInfo))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import actionTypes from './actionTypes';\r\n\r\nexport const adminLoginSuccess = (adminInfo) => ({\r\n    type: actionTypes.ADMIN_LOGIN_SUCCESS,\r\n    adminInfo: adminInfo\r\n})\r\n\r\nexport const adminLoginFail = () => ({\r\n    type: actionTypes.ADMIN_LOGIN_FAIL\r\n})\r\n\r\nexport const processLogout = () => ({\r\n    type: actionTypes.PROCESS_LOGOUT\r\n})","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Navigator.scss';\r\n\r\nclass MenuGroup extends Component {\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        return (\r\n            <li className=\"menu-group\">\r\n                <div className=\"menu-group-name\">\r\n                    <FormattedMessage id={name} />\r\n                </div>\r\n                <ul className=\"menu-list list-unstyled\">\r\n                    {children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\r\n                {hasSubMenu ? (\r\n                    <Fragment>\r\n                        <span\r\n                            data-toggle=\"collapse\"\r\n                            className={\"menu-link collapsed\"}\r\n                            onClick={onClick}\r\n                            aria-expanded={\"false\"}\r\n                        >\r\n                            <FormattedMessage id={name} />\r\n                            <div className=\"icon-right\">\r\n                                <i className={\"far fa-angle-right\"} />\r\n                            </div>\r\n                        </span>\r\n                        <div>\r\n                            <ul className=\"sub-menu-list list-unstyled\">\r\n                                {children}\r\n                            </ul>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                        <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\r\n                            <FormattedMessage id={name} />\r\n                        </Link>\r\n                    )}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubMenu extends Component {\r\n\r\n    getItemClass = path => {\r\n        return this.props.location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    render() {\r\n        const { name, link, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\r\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\r\n                    <FormattedMessage id={name} />\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst MenuGroupWithRouter = withRouter(MenuGroup);\r\nconst MenuWithRouter = withRouter(Menu);\r\nconst SubMenuWithRouter = withRouter(SubMenu);\r\n\r\nconst withRouterInnerRef = (WrappedComponent) => {\r\n\r\n    class InnerComponentWithRef extends React.Component {\r\n        render() {\r\n            const { forwardRef, ...rest } = this.props;\r\n            return <WrappedComponent {...rest} ref={forwardRef} />;\r\n        }\r\n    }\r\n\r\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\r\n\r\n    return React.forwardRef((props, ref) => {\r\n        return <ComponentWithRef {...props} forwardRef={ref} />;\r\n    });\r\n};\r\n\r\nclass Navigator extends Component {\r\n    state = {\r\n        expandedMenu: {}\r\n    };\r\n\r\n    toggle = (groupIndex, menuIndex) => {\r\n        const expandedMenu = {};\r\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\r\n        if (needExpand) {\r\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\r\n        }\r\n\r\n        this.setState({\r\n            expandedMenu: expandedMenu\r\n        });\r\n    };\r\n\r\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\r\n        if (subMenus) {\r\n            if (subMenus.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            const currentPath = location.pathname;\r\n            for (let i = 0; i < subMenus.length; i++) {\r\n                const subMenu = subMenus[i];\r\n                if (subMenu.link === currentPath) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (link) {\r\n            return this.props.location.pathname === link;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    checkActiveMenu = () => {\r\n        const { menus, location } = this.props;\r\n        outerLoop:\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const group = menus[i];\r\n            if (group.menus && group.menus.length > 0) {\r\n                for (let j = 0; j < group.menus.length; j++) {\r\n                    const menu = group.menus[j];\r\n                    if (menu.subMenus && menu.subMenus.length > 0) {\r\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\r\n                            const key = i + '_' + j;\r\n                            this.setState({\r\n                                expandedMenu: {\r\n                                    [key]: true\r\n                                }\r\n                            });\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkActiveMenu();\r\n    };\r\n\r\n    // componentWillReceiveProps(nextProps, prevState) {\r\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\r\n    //     const { location: nextLocation } = nextProps;\r\n    //     if (location !== nextLocation) {\r\n    //         let pathname = nextLocation && nextLocation.pathname;\r\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\r\n    //             setAccountMenuPath(pathname);\r\n    //         }\r\n    //         if (pathname.startsWith('/settings/')) {\r\n    //             setSettingMenuPath(pathname);\r\n    //         };\r\n    //     };\r\n    // };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { location } = this.props;\r\n        const { location: prevLocation } = prevProps;\r\n        if (location !== prevLocation) {\r\n            this.checkActiveMenu();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { menus, location, onLinkClick } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <ul className=\"navigator-menu list-unstyled\">\r\n                    {\r\n                        menus.map((group, groupIndex) => {\r\n                            return (\r\n                                <Fragment key={groupIndex}>\r\n                                    <MenuGroupWithRouter name={group.name}>\r\n                                        {group.menus ? (\r\n                                            group.menus.map((menu, menuIndex) => {\r\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\r\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\r\n                                                return (\r\n                                                    <MenuWithRouter\r\n                                                        key={menuIndex}\r\n                                                        active={isMenuHasSubMenuActive}\r\n                                                        name={menu.name}\r\n                                                        link={menu.link}\r\n                                                        hasSubMenu={menu.subMenus}\r\n                                                        isOpen={isSubMenuOpen}\r\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\r\n                                                        onLinkClick={onLinkClick}\r\n                                                    >\r\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\r\n                                                            <SubMenuWithRouter\r\n                                                                key={subMenuIndex}\r\n                                                                name={subMenu.name}\r\n                                                                link={subMenu.link}\r\n                                                                onClick={this.closeOtherExpand}\r\n                                                                onLinkClick={onLinkClick}\r\n                                                            />\r\n                                                        ))}\r\n                                                    </MenuWithRouter>\r\n                                                );\r\n                                            })\r\n                                        ) : null}\r\n                                    </MenuGroupWithRouter>\r\n                                </Fragment>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\r\n","export const userMenu = [\r\n    { //hệ thống\r\n        name: 'menu.system.header', menus: [\r\n            {\r\n                name: 'menu.system.system-administrator.header',\r\n                subMenus: [\r\n                    { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n                    { name: 'menu.system.system-administrator.user-history', link: '/system/user-history' },\r\n                    { name: 'menu.system.system-administrator.user-keyboard-log', link: '/system/user-keyboard-log' },\r\n                    { name: 'menu.system.system-administrator.user-block-web', link: '/system/user-block-website' },\r\n                ]\r\n            },\r\n            // { name: 'menu.system.system-parameter.header', link: '/system/system-parameter' },\r\n        ]\r\n    },\r\n];","export const adminMenu = [\r\n    { //hệ thống\r\n        name: 'menu.system.header', menus: [\r\n            {\r\n                name: 'menu.system.system-user.header',\r\n                subMenus: [\r\n                    { name: 'menu.system.system-user.user-manage', link: '/system/admin-manage' },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n];","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from '../../components/Navigator';\r\nimport { userMenu } from './menuApp';\r\nimport { adminMenu } from './menuAdmin';\r\nimport './Header.scss';\r\nimport {Languages} from '../../utils/constant'\r\nimport {changeLanguageApp} from '../../store/actions'\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nclass Header extends Component {\r\n\r\n    changeLanguage = (language) => {\r\n        this.props.changeLanguageAppRedux(language)\r\n    }\r\n\r\n    render() {\r\n        const { processLogout, userInfo } = this.props;\r\n        return (\r\n            <div className=\"header-container\">\r\n                {/* thanh navigator */}\r\n                {userInfo && userInfo.role_id == 1 ? \r\n                    <div className=\"header-tabs-container\">\r\n                        <Navigator menus={adminMenu} />\r\n                    </div> :\r\n                    <div className=\"header-tabs-container\">\r\n                        <Navigator menus={userMenu} />\r\n                    </div>\r\n                }\r\n\r\n                {/* nút thay đổi ngôn ngữ */}\r\n                <div className=\"language-buttons\">\r\n                    <span className='welcome'>\r\n                        <FormattedMessage id='common.welcome'/>\r\n                        {userInfo && userInfo.full_name ? userInfo.full_name: ''}!\r\n                        </span>\r\n                    <button className=\"btn-language\" onClick={() => this.changeLanguage(Languages.VI)}>\r\n                        VN\r\n                    </button>\r\n                    <button className=\"btn-language\" onClick={() => this.changeLanguage(Languages.EN)}>\r\n                        EN\r\n                    </button>\r\n                    {/* nút logout */}\r\n                    <div className=\"btn btn-logout\" onClick={processLogout}>\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInfo: state.user.userInfo,\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (lang) => dispatch(actions.changeLanguageApp(lang))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import actionTypes from './actionTypes';\r\n\r\nexport const appStartUpComplete = () => ({\r\n    type: actionTypes.APP_START_UP_COMPLETE\r\n});\r\n\r\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\r\n    type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\r\n    contentOfConfirmModal: contentOfConfirmModal\r\n});\r\n\r\nexport const changeLanguageApp = (languageInput) => ({\r\n    type: actionTypes.CHANGE_LANGUAGE,\r\n    language: languageInput\r\n})","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass ModalUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            fullName: '',\r\n            password: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggleUserManage()\r\n    }\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = {...this.state};\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['fullName', 'password', 'email']\r\n        for(let i=0; i < arrInput.length; i++){\r\n            if (!this.state[arrInput[i]]) {\r\n                alert(\"Please fill \" + arrInput[i] + '!!');\r\n                isValid = false;\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    handleCreateNewUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid) {\r\n            this.props.createNewUser(this.state);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Modal \r\n                    isOpen={this.props.isOpen} \r\n                    toggle={() => this.toggle()} \r\n                    className={'modal-user-container'}\r\n                    size='lg'\r\n                >\r\n                <ModalHeader toggle={() => this.toggle()}>\r\n                    <FormattedMessage id=\"user-manage.form-create.title\"/>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <div className='modal-user-body'>\r\n                        <div className='input-container'>\r\n                            <label><FormattedMessage id=\"user-manage.form-create.full-name\"/></label>\r\n                            <input \r\n                                type='text' \r\n                                onChange={((event) => {this.handleOnChangeInput(event, \"fullName\")})}\r\n                                value={this.state.fullName}\r\n                            />\r\n                        </div>\r\n                        <div className='input-container'>\r\n                            <label><FormattedMessage id=\"user-manage.form-create.password\"/></label>\r\n                            <input \r\n                                type='password' \r\n                                onChange={((event) => {this.handleOnChangeInput(event, \"password\")})}\r\n                                value={this.state.password}\r\n                            />\r\n                        </div>\r\n                        <div className='input-container max-width-input'>\r\n                            <label><FormattedMessage id=\"user-manage.form-create.email\"/></label>\r\n                            <input \r\n                                type='text' \r\n                                onChange={((event) => {this.handleOnChangeInput(event, \"email\")})}\r\n                                value={this.state.email}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <Button \r\n                    color=\"primary px-3\" \r\n                    onClick={() => this.handleCreateNewUser()}\r\n                >\r\n                    <FormattedMessage id=\"user-manage.form-create.btn-add\"/>\r\n                </Button>{' '}\r\n                <Button color=\"secondary px-3\" onClick={() => this.toggle()}>\r\n                <FormattedMessage id=\"user-manage.form-create.btn-close\"/>\r\n                </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport lodash from 'lodash'\r\n\r\nclass ModelEditUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            id: '',\r\n            fullName: '',\r\n            password: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userInfo = this.props.userEditData\r\n        if (userInfo && !lodash.isEmpty(userInfo)) {\r\n            this.setState({\r\n                id: userInfo.id,\r\n                fullName: userInfo.fullName,\r\n                password: '',\r\n                email: userInfo.email\r\n            })\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggleEditUserManage()\r\n    }\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = {...this.state};\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['fullName', 'email']\r\n        for(let i=0; i < arrInput.length; i++){\r\n            if (!this.state[arrInput[i]]) {\r\n                alert(\"Please fill \" + arrInput[i] + '!!');\r\n                isValid = false;\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    handleEditUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid) {\r\n            this.props.editUserInfo(this.state);\r\n            this.setState({\r\n                fullName: '',\r\n                password: '',\r\n                email: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Modal \r\n                    isOpen={this.props.isOpen} \r\n                    toggle={() => this.toggle()} \r\n                    className={'modal-user-container'}\r\n                    size='lg'\r\n                >\r\n                <ModalHeader toggle={() => this.toggle()}>\r\n                    <FormattedMessage id=\"user-manage.form-edit.title\"/>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <div className='modal-user-body'>\r\n                        <div className='input-container'>\r\n                            <label><FormattedMessage id=\"user-manage.form-edit.full-name\"/></label>\r\n                            <input \r\n                                type='text' \r\n                                onChange={((event) => {this.handleOnChangeInput(event, \"fullName\")})}\r\n                                value={this.state.fullName}\r\n                            />\r\n                        </div>\r\n                        <div className='input-container'>\r\n                            <label><FormattedMessage id=\"user-manage.form-edit.password\"/></label>\r\n                            <input \r\n                                type='password' \r\n                                onChange={((event) => {this.handleOnChangeInput(event, \"password\")})}\r\n                                value={this.state.password}\r\n                                placeholder='Fill your new password or empty'\r\n                            />\r\n                        </div>\r\n                        <div className='input-container max-width-input'>\r\n                            <label><FormattedMessage id=\"user-manage.form-edit.email\"/></label>\r\n                            <input \r\n                                type='text' \r\n                                onChange={((event) => {this.handleOnChangeInput(event, \"email\")})}\r\n                                value={this.state.email}\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <Button \r\n                    color=\"primary px-3\" \r\n                    onClick={() => this.handleEditUser()}\r\n                >\r\n                    <FormattedMessage id=\"user-manage.form-edit.btn-save\"/>\r\n                </Button>{' '}\r\n                <Button color=\"secondary px-3\" onClick={() => this.toggle()}>\r\n                    <FormattedMessage id=\"user-manage.form-edit.btn-close\"/>\r\n                </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelEditUser);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserManage.scss'\r\nimport {handleUserInfo, \r\n        handleCreateNewUserService,\r\n        handleBlockUserService,\r\n        handleEditUserService    \r\n        } from '../../services/userService'\r\nimport {processLogout} from '../../store/actions/userActions'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Loader from '../../components/Loader'\r\nimport ModalUser from './ModalUser';\r\nimport ModalEditUser from './ModalEditUser';\r\n\r\nclass UserManage extends Component {\r\n\r\n    /** Life Cycle\r\n     *  Run component\r\n     *  1 Run Construct -> init state\r\n     *  2 Did mount (set state)\r\n     *  3 Render\r\n     */\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            toastMsg: '',\r\n            isToast: false,\r\n            arrUsers: [],\r\n            isLoading: false,\r\n            isOpenModal: false,\r\n            isOpenModalEditUser: false,\r\n            userEdit: {}\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        await this.getAllUser();\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            const resp = await handleUserInfo();\r\n            if (resp.data) {\r\n                this.setState({isLoading: false})\r\n                this.setState({\r\n                    arrUsers: resp.data\r\n                })\r\n            }\r\n        }\r\n        catch (error){\r\n            this.setState({isLoading: false})\r\n            if (error.response) {\r\n                if (error.response.data) {\r\n                    if (error?.response?.data?.msg === 'Token has expired'){\r\n                        alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                        this.props.LoginAgain()\r\n                    } else if (error?.response?.status === 401){\r\n                        alert(error?.response?.data?.message)\r\n                    }\r\n                    else {\r\n                        this.setState({isToast: true, toastMsg: error?.response?.data?.message})\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleAddNewUser = () => {\r\n        this.setState({isOpenModal: true})\r\n    }\r\n\r\n    toggleUserModal = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        })\r\n    }\r\n\r\n    createNewUser = async (data) => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            let resp = await handleCreateNewUserService(data);\r\n            if (resp) {\r\n                await this.getAllUser();\r\n                this.setState({\r\n                    isOpenModal: false,\r\n                    isLoading: false\r\n                })\r\n            }\r\n        } catch(error) {\r\n            this.setState({isLoading: false})\r\n            if (error?.response?.data?.msg === 'Token has expired'){\r\n                alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                this.props.LoginAgain()\r\n            }\r\n            else if (error?.response?.status != 200) {\r\n                alert(\"Error: \" + error?.response?.data?.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    handleBlockUser = async (data) => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            let childID = data.id\r\n            let resp = await handleBlockUserService(childID);\r\n            if (resp) {\r\n                await this.getAllUser();\r\n                this.setState({isLoading: false})\r\n            }\r\n        } catch(error) {\r\n            this.setState({isLoading: false})\r\n            if (error?.response?.data?.msg === 'Token has expired'){\r\n                alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                this.props.LoginAgain()\r\n            }\r\n            else if (error?.response?.status != 200) {\r\n                alert(\"Error: \" + error?.response?.data?.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    handleEditUser = (data) => {\r\n        this.setState({\r\n            isOpenModalEditUser: true,\r\n            userEdit: data\r\n        })\r\n    }\r\n\r\n    toggleEditUserModal = () => {\r\n        this.setState({\r\n            isOpenModalEditUser: !this.state.isOpenModalEditUser\r\n        })\r\n    }\r\n\r\n    editUser = async (data) => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            let resp = await handleEditUserService(data);\r\n            if (resp) {\r\n                await this.getAllUser();\r\n                this.setState({\r\n                    isLoading: false,\r\n                    isOpenModalEditUser: false,\r\n                })\r\n            }\r\n        } catch(error) {\r\n            this.setState({isLoading: false})\r\n            if (error?.response?.data?.msg === 'Token has expired'){\r\n                alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                this.props.LoginAgain()\r\n            }\r\n            if (error?.response?.status != 200) {\r\n                alert(\"Error: \" + error?.response?.data?.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let arrayUsers = this.state.arrUsers;\r\n        return (\r\n            <div className=\"users-container\">\r\n                {this.state.isLoading && <Loader></Loader>}\r\n                <ModalUser\r\n                    isOpen={this.state.isOpenModal}\r\n                    toggleUserManage={this.toggleUserModal}\r\n                    createNewUser = {this.createNewUser}\r\n                />\r\n                {this.state.isOpenModalEditUser && \r\n                    <ModalEditUser\r\n                        isOpen={this.state.isOpenModalEditUser}\r\n                        toggleEditUserManage={this.toggleEditUserModal}\r\n                        editUserInfo = {this.editUser}\r\n                        userEditData = {this.state.userEdit}\r\n                    />\r\n                }\r\n                <div className='title text-center'>\r\n                    <FormattedMessage id=\"user-manage.title\"/>\r\n                </div>\r\n                <div className='mx-3'>\r\n                    <button className='btn btn-primary px-3' onClick={() => this.handleAddNewUser()}>\r\n                        <i className=\"fas fa-user-plus px-2\"></i><FormattedMessage id=\"user-manage.btn-add-user\"/>\r\n                    </button>\r\n                </div>\r\n                <div className='users-table mt-4 mx-1'>\r\n                <table id=\"customers\">\r\n                <tbody>\r\n                <tr>\r\n                    <th><FormattedMessage id=\"user-manage.email\"/></th>\r\n                    <th><FormattedMessage id=\"user-manage.full-name\"/></th>\r\n                    <th><FormattedMessage id=\"user-manage.device\"/></th>\r\n                    <th><FormattedMessage id=\"user-manage.status\"/></th>\r\n                    <th><FormattedMessage id=\"user-manage.action\"/></th>\r\n                </tr>\r\n                {arrayUsers && arrayUsers.map((item, index) => {\r\n                    let _devices =  item.devices.map(device => device.deviceName)\r\n                    let deviceNamesString = _devices.join(\" | \")\r\n                    return (\r\n                        <tr>\r\n                            <td>{item.email}</td>\r\n                            <td>{item.fullName}</td>\r\n                            <td>{deviceNamesString}</td>\r\n                            <td><i className={item.status === 'inactive'? 'fas fa-lock' : 'fas fa-unlock-alt'}></i></td>\r\n                            <td>\r\n                                <button className='btn-edit'\r\n                                    onClick={() => this.handleEditUser(item)}>\r\n                                    <i className=\"far fa-edit\"></i>\r\n                                </button>\r\n                                <button className='btn-block'\r\n                                    onClick={() => this.handleBlockUser(item)}>\r\n                                    <i className=\"fas fa-ban\"></i>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        LoginAgain: () => dispatch(processLogout())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserHistory.scss'\r\nimport Loader from '../../components/Loader'\r\nimport {processLogout} from '../../store/actions/userActions'\r\nimport {\r\n    handleUserInfo,\r\n    handleGetWebHistory,\r\n    handleTopWebHistory\r\n} from '../../services/userService'\r\n\r\n\r\nclass UserHistory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            arrHistories: [],\r\n            isLoading: false,\r\n            userAndDevices: [],\r\n            deviceToMapping: [],\r\n            selectChild: \"\",\r\n            selectDevice: \"\",\r\n            selectDay: \"\",\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getAllUser();\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            const resp = await handleUserInfo();\r\n            if (resp.data) {\r\n                this.setState({isLoading: false})\r\n                this.setState({\r\n                    userAndDevices: resp.data\r\n                })\r\n            }\r\n        }\r\n        catch (error){\r\n            this.setState({isLoading: false})\r\n            if (error.response) {\r\n                if (error.response.data) {\r\n                    if (error?.response?.data?.msg === 'Token has expired'){\r\n                        alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                        this.props.LoginAgain()\r\n                    } else if (error?.response?.status === 401){\r\n                        alert(error?.response?.data?.message)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getHistoryByDay = async () => {\r\n        try {\r\n            let childID = this.state.selectChild\r\n            let deviceID = this.state.selectDevice\r\n            let day = this.state.selectDay\r\n            // validate input\r\n            if (childID == \"\" || deviceID == \"\" || day == \"\") {\r\n                alert(\"Please select input to filter!!\")\r\n            }\r\n            else{\r\n                this.setState({isLoading: true})\r\n                const resp = await handleGetWebHistory(Number(childID),Number(deviceID),Number(day));\r\n                if (resp.data) {\r\n                    this.setState({isLoading: false})\r\n                    this.setState({\r\n                        arrHistories: resp.data\r\n                    })\r\n                }\r\n            }\r\n        } catch(error){\r\n            this.setState({isLoading: false})\r\n            if (error.response) {\r\n                if (error.response.data) {\r\n                    if (error?.response?.data?.msg === 'Token has expired'){\r\n                        alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                        this.props.LoginAgain()\r\n                    } else if (error?.response?.status != 200){\r\n                        alert(error?.response?.data?.message)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getTopHistoryWeb = async () => {\r\n        try {\r\n            let childID = this.state.selectChild\r\n            // validate input\r\n            if (childID == \"\") {\r\n                alert(\"Please select child to filter!!\")\r\n            }\r\n            else{\r\n                this.setState({isLoading: true, selectDevice: \"\", selectDay: \"\"})\r\n                const resp = await handleTopWebHistory(Number(childID));\r\n                if (resp.data) {\r\n                    this.setState({isLoading: false})\r\n                    this.setState({\r\n                        arrHistories: resp.data\r\n                    })\r\n                }\r\n            }\r\n        } catch(error){\r\n            this.setState({isLoading: false})\r\n            if (error.response) {\r\n                if (error.response.data) {\r\n                    if (error?.response?.data?.msg === 'Token has expired'){\r\n                        alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                        this.props.LoginAgain()\r\n                    } else if (error?.response?.status != 200){\r\n                        alert(error?.response?.data?.message)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChoseChild = (value) => {\r\n        var data = this.state.userAndDevices;\r\n        for (var i=0; i<data.length; i++) {\r\n            if (data[i].id == value) {\r\n                this.setState({ \r\n                    selectChild: value,\r\n                    deviceToMapping: data[i].devices\r\n                });\r\n                break;\r\n            } \r\n        }\r\n    }\r\n\r\n    handleChoseDevice = (value) => {\r\n        this.setState({ \r\n            selectDevice: value\r\n        });\r\n    }\r\n\r\n    handleChoseDay = (value) => {\r\n        this.setState({ \r\n            selectDay: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let arrayHistories = this.state.arrHistories;\r\n        let arrUserAndDevices = this.state.userAndDevices;\r\n        let arrDeviceToMapping = this.state.deviceToMapping;\r\n        return (\r\n            <div className=\"user-history-container\">\r\n                {this.state.isLoading && <Loader></Loader>}\r\n                <div className='title'>\r\n                    <FormattedMessage id=\"history-web.title\"/>\r\n                </div>\r\n\r\n                <div className='filter-history'>\r\n                    <div className='filter-name'><FormattedMessage id=\"history-web.filter.child\"/>:</div>\r\n                    <div className='select-dropdown'>\r\n                        <select id=\"selectChild\" name=\"child\" value={this.state.selectChild} onChange={(val) => this.handleChoseChild(val.target.value)}>\r\n                            <option value=\"\" hidden>Chọn con cái</option>\r\n                            {arrUserAndDevices && arrUserAndDevices.map((item, index) => {\r\n                                return (\r\n                                    <option value={item.id}>{item.fullName}</option>\r\n                                )\r\n                            })}\r\n                        </select>   \r\n                    </div>\r\n                    <div className='filter-name'><FormattedMessage id=\"history-web.filter.device\"/>:</div>\r\n                    <div className='select-dropdown'>\r\n                        <select id=\"selectDevice\" name=\"device\" value={this.state.selectDevice} onChange={(val) => this.handleChoseDevice(val.target.value)}>\r\n                            <option value=\"\" hidden>Chọn thiết bị</option>\r\n                            {arrDeviceToMapping && arrDeviceToMapping.map((item, index) => {\r\n                                return (\r\n                                    <option value={item.id}>{item.deviceName}</option>\r\n                                )\r\n                            })}\r\n                        </select>   \r\n                    </div>\r\n                    <div className='filter-name'><FormattedMessage id=\"history-web.filter.access-day\"/>:</div>\r\n                    <div className='select-dropdown'>\r\n                        <select id=\"selectDay\" name=\"day\" onChange={(val) => this.handleChoseDay(val.target.value)}>\r\n                            <option value=\"\" hidden>Chọn ngày truy cập</option>\r\n                            <option value=\"3\">3 ngày</option>\r\n                            <option value=\"7\">7 ngày</option>\r\n                            <option value=\"14\">14 ngày</option>\r\n                            <option value=\"21\">21 ngày</option>\r\n                            <option value=\"30\">30 ngày</option>\r\n                        </select>   \r\n                    </div>\r\n                    <div className='div-search'>\r\n                        <button className='btn-search' onClick={() => this.getHistoryByDay()}>\r\n                            <i class=\"fas fa-search px-2\"></i>\r\n                            <FormattedMessage id=\"history-web.filter.btn-search\"/>\r\n                        </button>\r\n                    </div>\r\n                    <div className='div-chart'>\r\n                        <button className='btn-chart' onClick={() => this.getTopHistoryWeb()}>\r\n                            <i class=\"fas fa-chart-line px-2\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='user-history-body'>\r\n                    <div className='users-table mt-4 mx-1'>\r\n                    <table id=\"users\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <th><FormattedMessage id=\"history-web.url\"/></th>\r\n                        <th><FormattedMessage id=\"history-web.total-visit\"/></th>\r\n                        <th><FormattedMessage id=\"history-web.created-at\"/></th>\r\n                    </tr>\r\n                    {arrayHistories && arrayHistories.map((item, index) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{item.url}</td>\r\n                                <td>{item.total_visit}</td>\r\n                                <td>{item.created_at}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        LoginAgain: () => dispatch(processLogout())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserHistory);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Loader from '../../components/Loader'\r\nimport {processLogout} from '../../store/actions/userActions'\r\nimport {\r\n    handleUserInfo,\r\n    handleGetKeyboardLog,\r\n} from '../../services/userService'\r\nimport './UserKeyboardLog.scss'\r\n\r\nclass UserKeyboardLog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            arrKeyboardLogs: [],\r\n            isLoading: false,\r\n            userAndDevices: [],\r\n            deviceToMapping: [],\r\n            selectChild: \"\",\r\n            selectDevice: \"\",\r\n            selectDay: \"\",\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getAllUser();\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            const resp = await handleUserInfo();\r\n            if (resp.data) {\r\n                this.setState({isLoading: false})\r\n                this.setState({\r\n                    userAndDevices: resp.data\r\n                })\r\n            }\r\n        }\r\n        catch (error){\r\n            this.setState({isLoading: false})\r\n            if (error.response) {\r\n                if (error.response.data) {\r\n                    if (error?.response?.data?.msg === 'Token has expired'){\r\n                        alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                        this.props.LoginAgain()\r\n                    } else if (error?.response?.status === 401){\r\n                        alert(error?.response?.data?.message)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getKeyboardLogByDay = async () => {\r\n        try {\r\n            let childID = this.state.selectChild\r\n            let deviceID = this.state.selectDevice\r\n            let day = this.state.selectDay\r\n            // validate input\r\n            if (childID == \"\" || deviceID == \"\" || day == \"\") {\r\n                alert(\"Please select input to filter!!\")\r\n            }\r\n            else{\r\n                this.setState({isLoading: true})\r\n                const resp = await handleGetKeyboardLog(Number(childID),Number(deviceID),Number(day));\r\n                if (resp.data) {\r\n                    this.setState({isLoading: false})\r\n                    this.setState({\r\n                        arrKeyboardLogs: resp.data\r\n                    })\r\n                }\r\n            }\r\n        } catch(error){\r\n            this.setState({isLoading: false})\r\n            if (error.response) {\r\n                if (error.response.data) {\r\n                    if (error?.response?.data?.msg === 'Token has expired'){\r\n                        alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                        this.props.LoginAgain()\r\n                    } else if (error?.response?.status != 200){\r\n                        alert(error?.response?.data?.message)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChoseChild = (value) => {\r\n        var data = this.state.userAndDevices;\r\n        for (var i=0; i<data.length; i++) {\r\n            if (data[i].id == value) {\r\n                this.setState({ \r\n                    selectChild: value,\r\n                    deviceToMapping: data[i].devices\r\n                });\r\n                break;\r\n            } \r\n        }\r\n    }\r\n\r\n    handleChoseDevice = (value) => {\r\n        this.setState({ \r\n            selectDevice: value\r\n        });\r\n    }\r\n\r\n    handleChoseDay = (value) => {\r\n        this.setState({ \r\n            selectDay: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let arrayKeyboardLogs = this.state.arrKeyboardLogs;\r\n        let arrUserAndDevices = this.state.userAndDevices;\r\n        let arrDeviceToMapping = this.state.deviceToMapping;\r\n        return (\r\n            <div className='user-keyboard-log-container'>\r\n                {this.state.isLoading && <Loader></Loader>}\r\n                <div className='title'><FormattedMessage id=\"keyboard-log.title\"/></div>\r\n                <div className='filter-keyboard-log'>\r\n                    <div className='filter-name'><FormattedMessage id=\"keyboard-log.filter.child\"/>:</div>\r\n                    <div className='select-dropdown'>\r\n                        <select id=\"selectChild\" name=\"child\" value={this.state.selectChild} onChange={(val) => this.handleChoseChild(val.target.value)}>\r\n                            <option value=\"\" hidden>Chọn con cái</option>\r\n                            {arrUserAndDevices && arrUserAndDevices.map((item, index) => {\r\n                                return (\r\n                                    <option value={item.id}>{item.fullName}</option>\r\n                                )\r\n                            })}\r\n                        </select>   \r\n                    </div>\r\n                    <div className='filter-name'><FormattedMessage id=\"keyboard-log.filter.device\"/>:</div>\r\n                    <div className='select-dropdown'>\r\n                        <select id=\"selectDevice\" name=\"device\" value={this.state.selectDevice} onChange={(val) => this.handleChoseDevice(val.target.value)}>\r\n                            <option value=\"\" hidden>Chọn thiết bị</option>\r\n                            {arrDeviceToMapping && arrDeviceToMapping.map((item, index) => {\r\n                                return (\r\n                                    <option value={item.id}>{item.deviceName}</option>\r\n                                )\r\n                            })}\r\n                        </select>   \r\n                    </div>\r\n                    <div className='filter-name'><FormattedMessage id=\"keyboard-log.filter.access-day\"/>:</div>\r\n                    <div className='select-dropdown'>\r\n                        <select id=\"selectDay\" name=\"day\" onChange={(val) => this.handleChoseDay(val.target.value)}>\r\n                            <option value=\"\" hidden>Chọn ngày truy cập</option>\r\n                            <option value=\"3\">3 ngày</option>\r\n                            <option value=\"7\">7 ngày</option>\r\n                            <option value=\"14\">14 ngày</option>\r\n                            <option value=\"21\">21 ngày</option>\r\n                            <option value=\"30\">30 ngày</option>\r\n                        </select>   \r\n                    </div>\r\n                    <div className='div-search'>\r\n                        <button className='btn-search' onClick={() => this.getKeyboardLogByDay()}>\r\n                            <i class=\"fas fa-search px-2\"></i>\r\n                            <FormattedMessage id=\"keyboard-log.filter.btn-search\"/>\r\n                        </button>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className='user-keyboard-log-body'>\r\n                <div className='users-table mt-4 mx-1'>\r\n                    <table id=\"users\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <th><FormattedMessage id=\"keyboard-log.key-stroke\"/></th>\r\n                        <th><FormattedMessage id=\"keyboard-log.total-visit\"/></th>\r\n                        <th><FormattedMessage id=\"keyboard-log.created-at\"/></th>\r\n                    </tr>\r\n                    {arrayKeyboardLogs && arrayKeyboardLogs.map((item, index) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{item.key_stroke}</td>\r\n                                <td>{item.total_visit}</td>\r\n                                <td>{item.created_at}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        LoginAgain: () => dispatch(processLogout())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserKeyboardLog);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserBlockWebsite extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                MANAGE USER BLOCK WEBSITE\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBlockWebsite);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './AdminManage.scss'\r\nimport {handleParentInfo,\r\n        } from '../../services/adminService'\r\nimport {\r\n        // handleCreateNewUserService,\r\n        handleBlockParentService,\r\n        handleEditParentService    \r\n    } from '../../services/adminService'\r\nimport {processLogout} from '../../store/actions/userActions'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Loader from '../../components/Loader'\r\n// import ModalUser from './ModalUser';\r\nimport ModalEditUser from './ModalEditUser';\r\n\r\nclass AdminManage extends Component {\r\n\r\n    /** Life Cycle\r\n     *  Run component\r\n     *  1 Run Construct -> init state\r\n     *  2 Did mount (set state)\r\n     *  3 Render\r\n     */\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            toastMsg: '',\r\n            isToast: false,\r\n            arrUsers: [],\r\n            isLoading: false,\r\n            isOpenModal: false,\r\n            isOpenModalEditUser: false,\r\n            userEdit: {}\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        await this.getAllUser();\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            const resp = await handleParentInfo();\r\n            if (resp.data) {\r\n                this.setState({isLoading: false})\r\n                this.setState({\r\n                    arrUsers: resp.data\r\n                })\r\n            }\r\n        }\r\n        catch (error){\r\n            this.setState({isLoading: false})\r\n            if (error.response) {\r\n                if (error.response.data) {\r\n                    if (error?.response?.data?.msg === 'Token has expired'){\r\n                        alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                        this.props.LoginAgain()\r\n                    } else if (error?.response?.status === 401){\r\n                        alert(error?.response?.data?.message)\r\n                    }\r\n                    else {\r\n                        this.setState({isToast: true, toastMsg: error?.response?.data?.message})\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // handleAddNewUser = () => {\r\n    //     this.setState({isOpenModal: true})\r\n    // }\r\n\r\n    toggleUserModal = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        })\r\n    }\r\n\r\n    // createNewUser = async (data) => {\r\n    //     try {\r\n    //         this.setState({isLoading: true})\r\n    //         let resp = await handleCreateNewUserService(data);\r\n    //         if (resp) {\r\n    //             await this.getAllUser();\r\n    //             this.setState({\r\n    //                 isOpenModal: false,\r\n    //                 isLoading: false\r\n    //             })\r\n    //         }\r\n    //     } catch(error) {\r\n    //         this.setState({isLoading: false})\r\n    //         if (error?.response?.data?.msg === 'Token has expired'){\r\n    //             alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n    //             this.props.LoginAgain()\r\n    //         }\r\n    //         else if (error?.response?.status != 200) {\r\n    //             alert(\"Error: \" + error?.response?.data?.message)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    handleBlockUser = async (data) => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            let parentID = data.id\r\n            let resp = await handleBlockParentService(parentID);\r\n            if (resp) {\r\n                await this.getAllUser();\r\n                this.setState({isLoading: false})\r\n            }\r\n        } catch(error) {\r\n            this.setState({isLoading: false})\r\n            if (error?.response?.data?.msg === 'Token has expired'){\r\n                alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                this.props.LoginAgain()\r\n            }\r\n            else if (error?.response?.status != 200) {\r\n                alert(\"Error: \" + error?.response?.data?.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    handleEditUser = (data) => {\r\n        this.setState({\r\n            isOpenModalEditUser: true,\r\n            userEdit: data\r\n        })\r\n    }\r\n\r\n    toggleEditUserModal = () => {\r\n        this.setState({\r\n            isOpenModalEditUser: !this.state.isOpenModalEditUser\r\n        })\r\n    }\r\n\r\n    editUser = async (data) => {\r\n        try {\r\n            this.setState({isLoading: true})\r\n            let resp = await handleEditParentService(data);\r\n            if (resp) {\r\n                await this.getAllUser();\r\n                this.setState({\r\n                    isLoading: false,\r\n                    isOpenModalEditUser: false,\r\n                })\r\n            }\r\n        } catch(error) {\r\n            this.setState({isLoading: false})\r\n            if (error?.response?.data?.msg === 'Token has expired'){\r\n                alert(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại!!\")\r\n                this.props.LoginAgain()\r\n            }\r\n            if (error?.response?.status != 200) {\r\n                alert(\"Error: \" + error?.response?.data?.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let arrayUsers = this.state.arrUsers;\r\n        return (\r\n            <div className=\"users-container\">\r\n                {this.state.isLoading && <Loader></Loader>}\r\n                {/* <ModalUser\r\n                    isOpen={this.state.isOpenModal}\r\n                    toggleUserManage={this.toggleUserModal}\r\n                    createNewUser = {this.createNewUser}\r\n                /> */}\r\n                {this.state.isOpenModalEditUser && \r\n                    <ModalEditUser\r\n                        isOpen={this.state.isOpenModalEditUser}\r\n                        toggleEditUserManage={this.toggleEditUserModal}\r\n                        editUserInfo = {this.editUser}\r\n                        userEditData = {this.state.userEdit}\r\n                    />\r\n                }\r\n                <div className='title text-center'>\r\n                    <FormattedMessage id=\"user-manage.title\"/>\r\n                </div>\r\n                {/* <div className='mx-3'>\r\n                    <button className='btn btn-primary px-3' onClick={() => this.handleAddNewUser()}>\r\n                        <i className=\"fas fa-user-plus px-2\"></i><FormattedMessage id=\"user-manage.btn-add-user\"/>\r\n                    </button>\r\n                </div> */}\r\n                <div className='users-table mt-4 mx-1'>\r\n                <table id=\"customers\">\r\n                <tbody>\r\n                <tr>\r\n                    <th><FormattedMessage id=\"user-manage.email\"/></th>\r\n                    <th><FormattedMessage id=\"user-manage.full-name\"/></th>\r\n                    <th><FormattedMessage id=\"user-manage.status\"/></th>\r\n                    <th><FormattedMessage id=\"user-manage.action\"/></th>\r\n                </tr>\r\n                {arrayUsers && arrayUsers.map((item, index) => {\r\n                    return (\r\n                        <tr>\r\n                            <td>{item.email}</td>\r\n                            <td>{item.fullName}</td>\r\n                            <td><i className={item.status === 'inactive'? 'fas fa-lock' : 'fas fa-unlock-alt'}></i></td>\r\n                            <td>\r\n                                <button className='btn-edit'\r\n                                    onClick={() => this.handleEditUser(item)}>\r\n                                    <i className=\"far fa-edit\"></i>\r\n                                </button>\r\n                                <button className='btn-block'\r\n                                    onClick={() => this.handleBlockUser(item)}>\r\n                                    <i className=\"fas fa-ban\"></i>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        LoginAgain: () => dispatch(processLogout())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminManage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport UserManage from '../containers/System/UserManage';\r\nimport UserHistory from '../containers/System/UserHistory';\r\nimport UserKeyboardLog from '../containers/System/UserKeyboardLog';\r\nimport UserBlockWebsite from '../containers/System/UserBlockWebsite';\r\nimport AdminManage from '../containers/System/AdminManage';\r\n\r\nclass System extends Component {\r\n    render() {\r\n        const { systemMenuPath } = this.props;\r\n        return (\r\n            <div className=\"system-container\">\r\n                <div className=\"system-list\">\r\n                    <Switch>\r\n                        <Route path=\"/system/user-manage\" component={UserManage} />\r\n                        <Route path=\"/system/user-history\" component={UserHistory} />\r\n                        <Route path=\"/system/user-keyboard-log\" component={UserKeyboardLog} />\r\n                        <Route path=\"/system/user-block-website\" component={UserBlockWebsite} />\r\n                        <Route path=\"/system/admin-manage\" component={AdminManage}/>\r\n                        <Route component={() => { return (<Redirect to={systemMenuPath} />) }} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Modal } from 'reactstrap';\r\n\r\nimport './ConfirmModal.scss';\r\nimport * as actions from \"../store/actions\";\r\nimport { KeyCodeUtils } from \"../utils\";\r\n\r\nclass ConfirmModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.acceptBtnRef = React.createRef();\r\n    }\r\n\r\n    initialState = {\r\n    };\r\n\r\n    state = {\r\n        ...this.initialState\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            if (!this.acceptBtnRef.current || this.acceptBtnRef.current.disabled) return;\r\n            this.acceptBtnRef.current.click();\r\n        }\r\n    }\r\n\r\n    onAcceptBtnClick = () => {\r\n        const { contentOfConfirmModal } = this.props;\r\n        if (contentOfConfirmModal.handleFunc) {\r\n            contentOfConfirmModal.handleFunc(contentOfConfirmModal.dataFunc);\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.setContentOfConfirmModal({\r\n            isOpen: false,\r\n            messageId: \"\",\r\n            handleFunc: null,\r\n            dataFunc: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { contentOfConfirmModal } = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={contentOfConfirmModal.isOpen} className='confirm-modal' centered={true}>\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-title\">\r\n                        <FormattedMessage id={\"common.confirm\"} />\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button className=\"btn btn-close\" onClick={this.onClose}>\r\n                            <i className=\"fal fa-times\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <div className=\"confirm-modal-content\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormattedMessage id={contentOfConfirmModal.messageId ? contentOfConfirmModal.messageId : \"common.confirm-this-task\"} />\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"btn-container text-center\">\r\n                                    <button className=\"btn btn-add\" onClick={this.onClose} >\r\n                                        <FormattedMessage id=\"common.close\" />\r\n                                    </button>\r\n                                    <button ref={this.acceptBtnRef} className=\"btn btn-add\" onClick={this.onAcceptBtnClick}>\r\n                                        <FormattedMessage id={\"common.accept\"} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        contentOfConfirmModal: state.app.contentOfConfirmModal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setContentOfConfirmModal: (contentOfConfirmModal) => dispatch(actions.setContentOfConfirmModal(contentOfConfirmModal))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport { history } from '../redux'\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\r\n\r\nimport { path } from '../utils'\r\n\r\nimport Home from '../routes/Home';\r\nimport Login from '../containers/Auth/Login';\r\nimport Header from './Header/Header';\r\nimport System from '../routes/System';\r\n\r\nimport { CustomToastCloseButton } from '../components/CustomToast';\r\nimport ConfirmModal from '../components/ConfirmModal';\r\n\r\nclass App extends Component {\r\n\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                        <ConfirmModal />\r\n                        {this.props.isLoggedIn && <Header />}\r\n\r\n                        <span className=\"content-container\">\r\n                            <Switch>\r\n                                <Route path={path.HOME} exact component={(Home)} />\r\n                                <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\r\n                                <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\r\n                            </Switch>\r\n                        </span>\r\n\r\n                        <ToastContainer\r\n                            className=\"toast-container\" toastClassName=\"toast-item\" bodyClassName=\"toast-item-body\"\r\n                            autoClose={false} hideProgressBar={true} pauseOnHover={false}\r\n                            pauseOnFocusLoss={true} closeOnClick={false} draggable={false}\r\n                            closeButton={<CustomToastCloseButton />}\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport '@formatjs/intl-pluralrules/polyfill';\r\nimport '@formatjs/intl-pluralrules/locale-data/en';\r\nimport '@formatjs/intl-pluralrules/locale-data/vi';\r\n\r\nimport '@formatjs/intl-relativetimeformat/polyfill';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\r\n\r\nimport { LanguageUtils } from '../utils'\r\n\r\nconst messages = LanguageUtils.getFlattenedMessages();\r\n\r\nclass IntlProviderWrapper extends Component {\r\n\r\n    render() {\r\n        const { children, language } = this.props;\r\n        return (\r\n            <IntlProvider\r\n                locale={language}\r\n                messages={messages[language]}\r\n                defaultLocale=\"vi\">\r\n                {children}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './styles/styles.scss';\r\n\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport reduxStore, { persistor } from './redux';\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={reduxStore}>\r\n            <IntlProviderWrapper>\r\n                <App persistor={persistor}/>\r\n            </IntlProviderWrapper>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrenderApp();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}